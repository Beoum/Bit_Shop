<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
								http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!--  J2SE 기본 / OOP 기본 / OOPL 기본 /  Java Syntax 기본 상기
		ㅇ Generalization / Specialization
		ㅇ parent class, child class, base class
		ㅇ extends / abstract
		ㅇ OverRiding 	-->
	
	<!-- 	1. 공통적 사항을 갖는 베이스빈 ,추상빈 선언 :: abstract attribute 사용 
			2. 추상선언한 빈은 인스턴스화 되지 않는다 :: abstract class 와 비교 -->
	<bean id="baseUser" class="spring.service.domain.User" abstract="true">
		<property name="userId" value="10유저"/> 
		<property name="age" value="10"/>
		<property name="password" value="1000"/>
	</bean>
	
	<!-- 1. baseUser 를 공유하는 user01 빈 정의 :: parent attribute 사용 -->
	<bean id="user01" parent="baseUser"/>
	
	<!--	1. baseUser 를 공유하는 user01 빈 정의 :: parent attribute 사용
			2. property age,password 는 공유하고, userId property 는 OverRiding  -->
	<bean id="user02" parent="baseUser">
		<property name="userId" value="20유저"/> 
	</bean>


	<!--	ㅇ OOP : class 간의 상속지원 ,  Field(Property) 상속개념 없음
			ㅇ Spring MetaData설정에서는 공통 Property 를 따로 정의 상속 지원. 	-->
	
	<!-- 	1. 공통적 사항을 갖는 베이스빈 ,추상빈 선언 :: abstract attribute 사용
			2. 공통 Property 를 갖는 빈은 class attribute 를 갖지 않는다.  	-->
	<bean id="bsaeUserId"  abstract="true">
		<property name="userId" value="30유저"/>
	</bean>
	
	<bean id="bsaeAgePassword"  abstract="true">
		<property name="age" value="30"/>
		<property name="password" value="3000"/>
	</bean>
	
	<!-- 1. bsaeUserId 를 공유하는 user03 빈 정의 :: parent attribute 사용 -->
		<bean id="user03" 
					class="spring.service.domain.User"	parent="bsaeUserId"/>

	<!-- 1. bsaeAgePassword 를 공유하는 user04 빈 정의 :: parent attribute 사용 -->				
	<bean id="user04" 
				class="spring.service.domain.User"	parent="bsaeAgePassword"/>				
	
	<!-- 	1. bsaeAgePassword 를 공유하는 user05 빈 정의 :: parent attribute 사용
			2. property age 는 공유하고, password property 는 오버라이딩  -->
	<bean id="user05" class="spring.service.domain.User"	parent="bsaeAgePassword">
			<property name="password" value="5000"/>
	</bean>
	
</beans>